<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Dev on [quandrei]</title>
    <link>https://quandrei.com/tags/dev/</link>
    <description>Recent content in Dev on [quandrei]</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Sat, 02 Jan 2016 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://quandrei.com/tags/dev/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Hugo Migration</title>
      <link>https://quandrei.com/post/hugo-migration/</link>
      <pubDate>Sat, 02 Jan 2016 00:00:00 +0000</pubDate>
      
      <guid>https://quandrei.com/post/hugo-migration/</guid>
      <description>

&lt;p&gt;In my endeavor to not be bored, and learn new things, I decided to take a step in a new direction, and move my existing &lt;a href=&#34;http://jekyllrb.com/&#34;&gt;Jekyll&lt;/a&gt; blog to &lt;a href=&#34;http://gohugo.io/&#34;&gt;Hugo&lt;/a&gt;.&lt;/p&gt;

&lt;h3 id=&#34;why-hugo:ed8b63f31f6583b3537dd16634107c12&#34;&gt;Why hugo?&lt;/h3&gt;

&lt;p&gt;There seem to be some obvious advantages out there for using Hugo over Jekyll, but the following reasons are what sold me on the idea:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;an excuse to learn me a great good; specifically get started on &lt;a href=&#34;https://golang.org/&#34;&gt;go-lang&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;taxonomy implememtation was dead-simple with a decent theme (lacking in my previous blog version)&lt;/li&gt;
&lt;li&gt;performance boost from Jekyll (there are numerous articles out there, take your pick)&lt;/li&gt;
&lt;li&gt;easy migration from &lt;a href=&#34;https://gohugo.io/tutorials/migrate-from-jekyll/&#34;&gt;Jekyll&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;easily hosted on &lt;a href=&#34;https://gohugo.io/tutorials/github-pages-blog/&#34;&gt;github pages&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;--watch&lt;/code&gt; and &lt;code&gt;--theme=theme_name&lt;/code&gt; options when running locally, which are incredibly useful for dynamically observing changes to the site, and testing/vetting out themes&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;searching-for-a-theme:ed8b63f31f6583b3537dd16634107c12&#34;&gt;Searching for a theme:&lt;/h3&gt;

&lt;p&gt;There were a few interesting themes I was debating on, and here were a few of the front-runners:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://themes.gohugo.io/lanyon/&#34;&gt;lanyon-hugo&lt;/a&gt;: I felt like I needed something different than my old blog, so this was out&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://themes.gohugo.io/casper/&#34;&gt;casper&lt;/a&gt;: was not too keen on the menu layout and the blog rendering, and no categories&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://themes.gohugo.io/detox/&#34;&gt;detox&lt;/a&gt;: no tag filtering for blog posts, no categories&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://themes.gohugo.io/startbootstrap-clean-blog/&#34;&gt;startbootstrap-clean-blog&lt;/a&gt;: too many errors to count, didn&amp;rsquo;t work out of the box&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://themes.gohugo.io/purehugo/&#34;&gt;purehugo&lt;/a&gt;: this was a close second, but there was little documentation for setting defaults for things like social networks, and I did not like the fact that the entire blog post is output on the posts page (should be a partial preview imho)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Since I am not the type to waste time wrangling HTML/CSS, and wanted to get something ported quickly, I finally decided on &lt;a href=&#34;http://themes.gohugo.io/redlounge/&#34;&gt;redlounge&lt;/a&gt;. The reasons being as follows:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;simple and clean&lt;/li&gt;
&lt;li&gt;mobile/tablet friendly&lt;/li&gt;
&lt;li&gt;easily implement taxonomies (like tags/categories)&lt;/li&gt;
&lt;li&gt;easily have access to social media, both for linking to my personal accounts, and for sharing links on posts&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Only thing I do not like is the preview of the blog posts lacks formatting. Not a deal breaker though.&lt;/p&gt;

&lt;h3 id=&#34;porting-to-hugo:ed8b63f31f6583b3537dd16634107c12&#34;&gt;Porting to Hugo&lt;/h3&gt;

&lt;p&gt;The migration tool provided by Hugo did most of the heavy lifting. It was literally as simple as:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ hugo import jekyll src_folder_of_jekyll_blog dest_folder
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;After I cleaned out a few folders I didn&amp;rsquo;t need (see &lt;a href=&#34;https://gohugo.io/overview/source-directory/&#34;&gt;Hugo folder structure&lt;/a&gt; for guidance), I just &lt;code&gt;git cloned&lt;/code&gt; a few themes in the &lt;em&gt;&lt;code&gt;dest_folder/themes&lt;/code&gt;&lt;/em&gt; and then ran the following to test/vet changes/themes:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ hugo serve -w --theme=theme_name
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The most time-consuming part was actually doing some light editing on the existing blog posts I already had. I just changed the &lt;a href=&#34;https://gohugo.io/content/front-matter/&#34;&gt;front-matter&lt;/a&gt; section on blog posts to make it compliant with &lt;code&gt;.toml&lt;/code&gt; structure, looked through my changes to make certain everything looked good, and I was set to start on deploying.&lt;/p&gt;

&lt;p&gt;For deployment, there are quite a few tutorials out there, if you just look for them, but the &lt;a href=&#34;https://gohugo.io/tutorials/github-pages-blog/#hosting-personal-organization-pages:fcefb200141ace3e7bfd6542457b7a72&#34;&gt;Hugo documentation&lt;/a&gt; that I followed pretty much sums up what you need to do.&lt;/p&gt;

&lt;h3 id=&#34;issues:ed8b63f31f6583b3537dd16634107c12&#34;&gt;Issues:&lt;/h3&gt;

&lt;p&gt;The only issue I ran into was the CSS not rendering properly after deployment. This was not specifically due to Hugo actually, but because of the fact that I force using &lt;code&gt;https&lt;/code&gt; on my site, through &lt;a href=&#34;https://www.cloudflare.com/&#34;&gt;Cloudflare&lt;/a&gt;, and use an SSL certificate setup through their panel. The Hugo documentation specifies using your github organization URL as your base URL in your config settings (i.e. &lt;code&gt;username.github.io&lt;/code&gt;). So, when serving up the CSS, the browser displays a message saying the CSS content is not secure, and will not serve up mixed content (unless the end user allows it). All that was needed was changing my base URL in my config to &lt;code&gt;quandrei.com&lt;/code&gt; and I was good to go.&lt;/p&gt;

&lt;h3 id=&#34;final-thoughts:ed8b63f31f6583b3537dd16634107c12&#34;&gt;Final thoughts:&lt;/h3&gt;

&lt;p&gt;I am happy with the end result. Nice looking/improved site, easy management through git/github, performance-centric. No regrets.&lt;/p&gt;

&lt;p&gt;Now if I can only figure out how to get it to write Magento code&amp;hellip; and do my laundry&amp;hellip; I&amp;rsquo;d be set.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>I am bored...</title>
      <link>https://quandrei.com/post/boredom/</link>
      <pubDate>Thu, 26 Nov 2015 00:00:00 +0000</pubDate>
      
      <guid>https://quandrei.com/post/boredom/</guid>
      <description>&lt;p&gt;So I have been extraordinarily busy with work these past few months, and haven&amp;rsquo;t had very much time for side projects, and interesting things that I&amp;rsquo;ve wanted to devote some time to. I&amp;rsquo;ve also been getting pretty bored with the work I am doing, something very dangerous in my profession, since this usually leads to the itch for new surroundings. This is a fairly engaging read on how to combat boredom for employees: &lt;a href=&#34;http://randsinrepose.com/archives/bored-people-quit/&#34;&gt;Bored People Quit&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In an effort to combat my boredom, I have been devoting time to learning a few new things:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://progrium.viewdocs.io/dokku/&#34;&gt;Dokku&lt;/a&gt; - PAAS (mini-Heroku) I deployed to my VPS to host everything&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.python.org/&#34;&gt;Python&lt;/a&gt; / &lt;a href=&#34;http://flask.pocoo.org/&#34;&gt;Flask&lt;/a&gt; - python microframework used to create a web app&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://golang.org/&#34;&gt;Go&lt;/a&gt; / &lt;a href=&#34;http://gohugo.io/&#34;&gt;Hugo&lt;/a&gt; - golang site generator to provide info on various projects&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://developer.apple.com/swift/&#34;&gt;Swift&lt;/a&gt; - iOS app to interface with the web app API&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I will update here, once more of these developments have materialized.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;[End Transmission]&lt;/strong&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Codeschool</title>
      <link>https://quandrei.com/post/codeschool/</link>
      <pubDate>Fri, 18 Oct 2013 00:00:00 +0000</pubDate>
      
      <guid>https://quandrei.com/post/codeschool/</guid>
      <description>

&lt;p&gt;A few months ago, I had decided to give &lt;a href=&#34;http://www.codeschool.com&#34;&gt;codeschool&lt;/a&gt; a try. It was more out of curiosity than necessity, to see if an online learning tool would help me learn a new language more quickly. Due to a billing hiccup, they were very gracious and gave me a free subscription for 6 months. This is my take on the whole concept:&lt;/p&gt;

&lt;h3 id=&#34;the-dizzying-highs:9bf04870cf6b8164fcd498e38ece23da&#34;&gt;The dizzying highs:&lt;/h3&gt;

&lt;p&gt;Most of the courses give you a good overview of the subject it is trying to educate you on. They go into a few details, and I have experienced a few TIL moments. The interface is pretty slick, and the intro videos/themes of each subject is engaging and entertaining. Some neat features also include in-browser exercises and tracking of progress of each course, with badges as achievements. It is also handy to have the slides of each course available for later reference.&lt;/p&gt;

&lt;h3 id=&#34;the-terrifying-lows:9bf04870cf6b8164fcd498e38ece23da&#34;&gt;The terrifying lows:&lt;/h3&gt;

&lt;p&gt;Their motto, &amp;ldquo;Learn by doing&amp;rdquo; is a little light on the &amp;lsquo;doing&amp;rsquo; part. I feel the &amp;lsquo;challenges&amp;rsquo; after each section are not terribly challenging. Most times, a quick view of the slides, and I can get through them fairly quickly (but this may also be due to my experience as a developer&amp;hellip; maybe beginners might find these more challenging). My one main critique would be to create more involved exercises for the subject matter, to really ingrain the material learned.&lt;/p&gt;

&lt;p&gt;A second observation I have is how fickle the system is when interpreting your submitted code. Often, I have found that an odd space somewhere will throw an error, and your submission is considered incorrect, despite it being perfectly valid code for the solution. I have probably spent more time trying to figure out what EXACTLY they wanted (character by character), than actually solving the problems presented to me.&lt;/p&gt;

&lt;h3 id=&#34;the-creamy-middles:9bf04870cf6b8164fcd498e38ece23da&#34;&gt;The creamy middles:&lt;/h3&gt;

&lt;p&gt;I would say that this would be a good beginner to anyone wanting to learn the very basics of language, and maybe pick up a few details. I don&amp;rsquo;t really feel this would be useful to experienced developers, as most of this information can be picked up through a good text, in which more details and subtleties of the language can be learned. It&amp;rsquo;s in knowing those underpinnings and details, that makes decisions on whether to use that language/technology on a project more informed and valid. And since getting a text would be the next step in really learning something, the codeschool step might seem unnecessary.&lt;/p&gt;

&lt;p&gt;The only advantage I see would be that learning those tidbits from codeschool will definitely be quicker than learning from a text. In my humble opinion, that hardly seems worth it when there exists the potential of really borking something when you don&amp;rsquo;t know the technology all that well.&lt;/p&gt;

&lt;p&gt;To learn and know something well, I feel that nothing really trumps experience. And experience takes TIME. There is no such thing as &lt;a href=&#34;http://www.acartoofar.co.uk/wp-content/uploads/2010/03/Teach-yourself-C++-in-21-days.png&#34;&gt;learning [insert language here] in 21 days&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;My main concern with this form of learning (and other specialized courses), is the generation of incompetent coders, who deem themselves to be highly knowledgeable, that will be turning up due to this trend of learning. Many will have the skills to churn out working code, but not the knowledge of a solid CS background that teaches fundamental concepts, which in turn helps you produce efficient and future-proof products/code. Basically, they will know enough to be dangerous.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>