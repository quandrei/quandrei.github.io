<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Web on [quandrei]</title>
    <link>https://quandrei.com/tags/web/</link>
    <description>Recent content in Web on [quandrei]</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Sat, 02 Jan 2016 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://quandrei.com/tags/web/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Hugo Migration</title>
      <link>https://quandrei.com/post/hugo-migration/</link>
      <pubDate>Sat, 02 Jan 2016 00:00:00 +0000</pubDate>
      
      <guid>https://quandrei.com/post/hugo-migration/</guid>
      <description>

&lt;p&gt;In my endeavor to not be bored, and learn new things, I decided to take a step in a new direction, and move my existing &lt;a href=&#34;http://jekyllrb.com/&#34;&gt;Jekyll&lt;/a&gt; blog to &lt;a href=&#34;http://gohugo.io/&#34;&gt;Hugo&lt;/a&gt;.&lt;/p&gt;

&lt;h3 id=&#34;why-hugo:ed8b63f31f6583b3537dd16634107c12&#34;&gt;Why hugo?&lt;/h3&gt;

&lt;p&gt;There seem to be some obvious advantages out ther for using Hugo over Jekyll, but the following reasons are what sold me on the idea:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;an excuse to learn me a great good; specifically get started on &lt;a href=&#34;https://golang.org/&#34;&gt;go-lang&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;taxonomy implememtation was dead-simple with a decent theme (lacking in my previous blog version)&lt;/li&gt;
&lt;li&gt;performance boost from Jekyll (there are numerous articles out there, take your pick)&lt;/li&gt;
&lt;li&gt;easy migration from &lt;a href=&#34;https://gohugo.io/tutorials/migrate-from-jekyll/&#34;&gt;Jekyll&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;easily hosted on &lt;a href=&#34;https://gohugo.io/tutorials/github-pages-blog/&#34;&gt;github pages&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;--watch&lt;/code&gt; and &lt;code&gt;--theme=theme_name&lt;/code&gt; options when running locally, which are incredibly useful for dynamically observing changes to the site, and testing/vetting out themes&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;searching-for-a-theme:ed8b63f31f6583b3537dd16634107c12&#34;&gt;Searching for a theme:&lt;/h3&gt;

&lt;p&gt;There were a few interesting themes I was debating on, and here were a few of the front-runners:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://themes.gohugo.io/lanyon/&#34;&gt;lanyon-hugo&lt;/a&gt;: I felt like I needed something different than my old blog, so this was out&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://themes.gohugo.io/casper/&#34;&gt;casper&lt;/a&gt;: was not too keen on the menu layout and the blog rendering, and no categories&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://themes.gohugo.io/detox/&#34;&gt;detox&lt;/a&gt;: no tag filtering for blog posts, no categories&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://themes.gohugo.io/startbootstrap-clean-blog/&#34;&gt;startbootstrap-clean-blog&lt;/a&gt;: too many errors to count, didn&amp;rsquo;t work out of the box&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://themes.gohugo.io/purehugo/&#34;&gt;purehugo&lt;/a&gt;: this was a close second, but there was little documentation for setting defaults for things like social networks, and I did not like the fact that the entire blog post is output on the posts page (should be a partial preview imho)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Since I am not the type to waste time wrangling HTML/CSS, and wanted to get something ported quickly, I finally decided on &lt;a href=&#34;http://themes.gohugo.io/redlounge/&#34;&gt;redlounge&lt;/a&gt;. The reasons being as follows:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;simple and clean&lt;/li&gt;
&lt;li&gt;mobile/tablet friendly&lt;/li&gt;
&lt;li&gt;easily implement taxonomies (like tags/categories)&lt;/li&gt;
&lt;li&gt;easily have access to social media, both for linking to my personal accounts, and for sharing links on posts&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Only thing I do not like is the preview of the blog posts lacks formatting. Not a deal breaker though.&lt;/p&gt;

&lt;h3 id=&#34;porting-to-hugo:ed8b63f31f6583b3537dd16634107c12&#34;&gt;Porting to Hugo&lt;/h3&gt;

&lt;p&gt;The migration tool provided by Hugo did most of the heavy lifting. It was literally as simple as:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ hugo import jekyll src_folder_of_jekyll_blog dest_folder
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;After I cleaned out a few folders I didn&amp;rsquo;t need (see &lt;a href=&#34;https://gohugo.io/overview/source-directory/&#34;&gt;Hugo folder structure&lt;/a&gt; for guidance), I just &lt;code&gt;git cloned&lt;/code&gt; a few themes in the &lt;em&gt;&lt;code&gt;dest_folder/themes&lt;/code&gt;&lt;/em&gt; and then ran the following to test/vet changes/themes:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ hugo serve -w --theme=theme_name
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The most time-consuming part was actually doing some light editing on the existing blog posts I already had. I just changed the &lt;a href=&#34;https://gohugo.io/content/front-matter/&#34;&gt;front-matter&lt;/a&gt; section on blog posts to make it compliant with &lt;code&gt;.toml&lt;/code&gt; structure, looked through my changes to make certain everything looked good, and I was set to start on deploying.&lt;/p&gt;

&lt;p&gt;For deployment, there are quite a few tutorials out there, if you just look for them, but the &lt;a href=&#34;https://gohugo.io/tutorials/github-pages-blog/#hosting-personal-organization-pages:fcefb200141ace3e7bfd6542457b7a72&#34;&gt;Hugo documentation&lt;/a&gt; that I followed pretty much sums up what you need to do.&lt;/p&gt;

&lt;h3 id=&#34;issues:ed8b63f31f6583b3537dd16634107c12&#34;&gt;Issues:&lt;/h3&gt;

&lt;p&gt;The only issue I ran into was the CSS not rendering properly after deployment. This was not specifically due to Hugo actually, but because of the fact that I force using &lt;code&gt;https&lt;/code&gt; on my site, through &lt;a href=&#34;https://www.cloudflare.com/&#34;&gt;Cloudflare&lt;/a&gt;, and use an SSL certificate setup through their panel. The Hugo documentation specifies using your github organization URL as your base URL in your config settings (i.e. &lt;code&gt;username.github.io&lt;/code&gt;). So, when serving up the CSS, the browser displays a message saying the CSS content is not secure, and will not serve up mixed content (unless the end user allows it). All that was needed was changing my base URL in my config to &lt;code&gt;quandrei.com&lt;/code&gt; and I was good to go.&lt;/p&gt;

&lt;h3 id=&#34;final-thoughts:ed8b63f31f6583b3537dd16634107c12&#34;&gt;Final thoughts:&lt;/h3&gt;

&lt;p&gt;I am happy with the end result. Nice looking/improved site, easy management through git/github, performance-centric. No regrets.&lt;/p&gt;

&lt;p&gt;Now if I can only figure out how to get it to write Magento code&amp;hellip; and do my laundry&amp;hellip; I&amp;rsquo;d be set.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>I am bored...</title>
      <link>https://quandrei.com/post/boredom/</link>
      <pubDate>Thu, 26 Nov 2015 00:00:00 +0000</pubDate>
      
      <guid>https://quandrei.com/post/boredom/</guid>
      <description>&lt;p&gt;So I have been extraordinarily busy with work these past few months, and haven&amp;rsquo;t had very much time for side projects, and interesting things that I&amp;rsquo;ve wanted to devote some time to. I&amp;rsquo;ve also been getting pretty bored with the work I am doing, something very dangerous in my profession, since this usually leads to the itch for new surroundings. This is a fairly engaging read on how to combat boredom for employees: &lt;a href=&#34;http://randsinrepose.com/archives/bored-people-quit/&#34;&gt;Bored People Quit&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In an effort to combat my boredom, I have been devoting time to learning a few new things:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://progrium.viewdocs.io/dokku/&#34;&gt;Dokku&lt;/a&gt; - PAAS (mini-Heroku) I deployed to my VPS to host everything&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.python.org/&#34;&gt;Python&lt;/a&gt; / &lt;a href=&#34;http://flask.pocoo.org/&#34;&gt;Flask&lt;/a&gt; - python microframework used to create a web app&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://golang.org/&#34;&gt;Go&lt;/a&gt; / &lt;a href=&#34;http://gohugo.io/&#34;&gt;Hugo&lt;/a&gt; - golang site generator to provide info on various projects&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://developer.apple.com/swift/&#34;&gt;Swift&lt;/a&gt; - iOS app to interface with the web app API&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I will update here, once more of these developments have materialized.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;[End Transmission]&lt;/strong&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Magento is as Magento does</title>
      <link>https://quandrei.com/post/magento/</link>
      <pubDate>Tue, 24 Nov 2015 00:00:00 +0000</pubDate>
      
      <guid>https://quandrei.com/post/magento/</guid>
      <description>

&lt;p&gt;I&amp;rsquo;ve been working as a &lt;a href=&#34;http://magento.com/&#34;&gt;Magento&lt;/a&gt; developer for a little over a year and a half, and I have come to one inescapable conclusion; I am not enjoying this.&lt;/p&gt;

&lt;p&gt;Have you ever heard the expression:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Stupid is as stupid does&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Well, by that same token, I think that the following expression is an apt decription of Magento:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Magento is as Magento does&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;For a more full explanation of the underlying expression, see &lt;a href=&#34;http://answers.google.com/answers/threadview?id=392986&#34;&gt;this&lt;/a&gt; (you can ignore all the preachy comments, and stick to the first answer given). But basically, this boils down to judging people or things by what they do, and not by how they appear.&lt;/p&gt;

&lt;h3 id=&#34;the-dizzying-highs:6975f8b398b6ca097f7264381802b6f4&#34;&gt;The dizzying highs:&lt;/h3&gt;

&lt;p&gt;Magento &lt;em&gt;appears&lt;/em&gt; to be a very shiny e-commerce solution. And in some respects it is. It provides a great degree of flexibility for those that want an e-commerce store, and has proven itself in the marketplace as a vetted solution.&lt;/p&gt;

&lt;p&gt;It provides a clean approach to create custom modules for new functionality, allowing for compartmentalizing code, and also provides mechanisms for injecting code in the execution process through minimal intrusion using event observers.&lt;/p&gt;

&lt;p&gt;These are all great things, however&amp;hellip;&lt;/p&gt;

&lt;h3 id=&#34;the-terrifying-lows:6975f8b398b6ca097f7264381802b6f4&#34;&gt;The terrifying lows:&lt;/h3&gt;

&lt;p&gt;To achieve this level of flexibility, it has made some design decisions (one being an &lt;a href=&#34;https://en.wikipedia.org/wiki/Entity%E2%80%93attribute%E2%80%93value_model&#34;&gt;EAV&lt;/a&gt; database schema design), which in turn sacrifices performance and scalability. To combat this issue, boosting performance is achieved through various caching techniques, but in my opinion is a hack at best, and a better solution should be sought out instead of applying a patching approach. Due to these performance issues, daily development can get slow and time consuming.&lt;/p&gt;

&lt;p&gt;The monolithic codebase is often difficult to navigate, and coupled with many different developers who have worked on this over a decade, and many having different approaches/visions to solving the same problem, often has led me in circles when trying to determine the best solution to a problem I am facing.&lt;/p&gt;

&lt;p&gt;A very picky naming convention for files/classes/modules/XML data can be frustrating at first, since often times, no errors are reported and fails silently, causing you to scratch your head wondering what went wrong.&lt;/p&gt;

&lt;h3 id=&#34;the-creamy-middles:6975f8b398b6ca097f7264381802b6f4&#34;&gt;The creamy middles:&lt;/h3&gt;

&lt;p&gt;Fortunately, a new hope has appeared in the form of Magento 2, and coupled with the release of PHP 7, should at the very least be intersting. Hopefully, this will help in resolving some of the annoyances in working with the platform on a daily basis (although XML files seem to have tripled&amp;hellip; ugh). From my limited knowledge of the release, some database architecture changes have been made to improve on performance. Personally, I would have liked to see something like &lt;a href=&#34;http://www.postgresql.org/docs/current/static/hstore.html&#34;&gt;PostgreSQL and the hstore&lt;/a&gt; column applied. With that approach, you would get the relational database components where needed, and the hstore column (similar to a document store applied in NoSQL) used where the dynamic nature of EAV is needed.&lt;/p&gt;

&lt;p&gt;Time will tell if this release will redeem Magento in my eyes.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>